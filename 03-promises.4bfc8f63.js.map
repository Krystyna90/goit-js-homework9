{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,yBAC9BE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,yBACjCI,WAAWL,SAASC,cAAc,WAGlCH,EAAKC,KAAKO,iBAAiB,UAmB3B,SAAiCC,GAC/BA,EAAEC,iBACF,MAAMC,EAAgBX,EAAKM,OAAOM,MAC5BC,EAAab,EAAKI,MAAMQ,MACxBE,EAAYd,EAAKK,KAAKO,MACrBG,EAAkBC,aAAY,MApBvC,SAAuBC,EAAUb,GAC/B,MAAMc,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACTC,GAAmB,EACjBP,EACFI,EAAQ,kCAGRC,EAAO,uBAAuB,GAE/BnB,EAAM,G,EAUNsB,CAAcf,EAAeE,GAAYc,MAAK,EAACV,SAAEA,EAAQb,MAAEA,OACzDa,EAAWQ,IACKd,GAEdiB,cAAcb,GAEjBX,EAAQS,EACRgB,EAAA/B,GAASgC,OAAOC,QAAQ,qBAAqBd,QAAeb,MAAU,IAErE4B,OAAM,EAACf,SAAEA,EAAQb,MAAEA,OAClBa,EAAWQ,IACKd,GAAeiB,cAAcb,GAC7CX,EAAQS,EACRgB,EAAA/B,GAASgC,OAAOG,QAAQ,oBAAoBhB,QAAeb,MAAU,GACrE,GACFU,E,IAtCN,IAAIW,EAAkB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name = \"delay\"]'),\n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name =\"amount\"]'),\npromiseBtn:document.querySelector('button'),\n}\n\nrefs.form.addEventListener('submit', onCreatePromiseBtnClick);\n\nlet promisesCounter = 0;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      promisesCounter += 1;\n    if (shouldResolve) {\n      resolve(' Promise fulfilled successfuly');\n    }\n    else {\n      reject(' Promise is rejected');\n    }\n  }, delay);\n  })\n}\n\nfunction onCreatePromiseBtnClick(e) {\n  e.preventDefault();\n  const positionValue = refs.amount.value;\n  const delayValue = refs.delay.value;\n  const stepValue = refs.step.value;\n   const promiseInterval = setInterval(() => {\n     createPromise(positionValue, delayValue).then(({ position, delay }) => {\n       position = promisesCounter;\n       if (position >= positionValue) {\n\n         clearInterval(promiseInterval);\n      }\n      delay = delayValue;\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n     })\n      .catch(({ position, delay }) => {\n        position = promisesCounter;\n        if (position >= positionValue) clearInterval(promiseInterval);\n        delay = delayValue;\n        Notiflix.Notify.warning(`Rejected promise ${position} in ${delay}ms`);\n      });\n   }, stepValue);\n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","promiseBtn","addEventListener","e","preventDefault","positionValue","value","delayValue","stepValue","promiseInterval","setInterval","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$promisesCounter","$47d4ff9957288465$var$createPromise","then","clearInterval","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.4bfc8f63.js.map"}