{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,yBAC9BE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,yBACjCI,WAAWL,SAASC,cAAc,WAGlCH,EAAKC,KAAKO,iBAAiB,UAgB3B,SAAiCC,G,kBAdjC,IAAiCL,EACzBM,GADyBN,EAoBZO,EAnBbD,EAAgBE,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACPP,EACFK,EAAQ,kCAGRC,EAAO,uB,GAERZ,E,KAWEc,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUhB,EAAKe,EAALf,MACjBgB,EAAWC,EACXjB,EAAQO,EACRW,EAAAxB,GAASyB,OAAOC,QAAQ,qBAAoCC,OAAfL,EAAS,QAAYK,OAANrB,EAAM,M,IAEnEsB,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUhB,EAAKe,EAALf,MAClBgB,EAAWC,EACXjB,EAAQO,EACNW,EAAAxB,GAASyB,OAAOI,QAAQ,oBAAmCF,OAAfL,EAAS,QAAYK,OAANrB,EAAM,M,IAGvEO,GAAcN,C,EAjBhBI,EAAEmB,iBAIF,IAHA,IAAMtB,EAASuB,OAAO7B,EAAKM,OAAOwB,OAC9BnB,EAAakB,OAAO7B,EAAKI,MAAM0B,OAC7BzB,EAAOwB,OAAO7B,EAAKK,KAAKyB,OACrBC,EAAI,EAAGA,GAAKzB,EAAQyB,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name = \"delay\"]'),\n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name =\"amount\"]'),\npromiseBtn:document.querySelector('button'),\n}\n\nrefs.form.addEventListener('submit', onCreatePromiseBtnClick);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve(' Promise fulfilled successfuly');\n    }\n    else {\n      reject(' Promise is rejected');\n    }\n  }, delay);\n  })\n}\n\nfunction onCreatePromiseBtnClick(e) {\n  e.preventDefault();\n  const amount = Number(refs.amount.value);\n  let delayValue = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        position = i;\n        delay = delayValue;\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        position = i;\n        delay = delayValue;\n          Notiflix.Notify.warning(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayValue += step;\n    };\n  }\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","promiseBtn","addEventListener","e","shouldResolve","delayValue","Math","random","Promise","resolve","reject","setTimeout","then","param","position","i","$parcel$interopDefault","Notify","success","concat","catch","warning","preventDefault","Number","value","i1","_loop"],"version":3,"file":"03-promises.4c15db22.js.map"}