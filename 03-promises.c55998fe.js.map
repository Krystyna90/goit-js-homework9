{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,yBAC9BE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,yBACjCI,WAAWL,SAASC,cAAc,WAGlCH,EAAKC,KAAKO,iBAAiB,UAmB3B,SAAiCC,GAC/BA,EAAEC,iBACF,IAAMC,EAAgBX,EAAKM,OAAOM,MAC5BC,EAAab,EAAKI,MAAMQ,MACxBE,EAAYd,EAAKK,KAAKO,MACrBG,EAAkBC,aAAY,WApBvC,IAAiCZ,EACzBa,GADyBb,EAqBCS,EApB1BI,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTC,GAAmB,EACjBP,EACFI,EAAQ,kCAGRC,EAAO,uB,GAERlB,E,KAUyCqB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUvB,EAAKsB,EAALtB,OACzDuB,EAAWH,IACKb,GAEdiB,cAAcb,GAEjBX,EAAQS,EACRgB,EAAA/B,GAASgC,OAAOC,QAAQ,qBAAoCC,OAAfL,EAAS,QAAYK,OAAN5B,EAAM,M,IAEjE6B,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUvB,EAAKsB,EAALtB,OAClBuB,EAAWH,IACKb,GAAeiB,cAAcb,GAC7CX,EAAQS,EACRgB,EAAA/B,GAASgC,OAAOI,QAAQ,oBAAmCF,OAAfL,EAAS,QAAYK,OAAN5B,EAAM,M,MAEnEU,E,IAtCN,IAAIU,EAAkB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name = \"delay\"]'),\n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name =\"amount\"]'),\npromiseBtn:document.querySelector('button'),\n}\n\nrefs.form.addEventListener('submit', onCreatePromiseBtnClick);\n\nlet promisesCounter = 0;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      promisesCounter += 1;\n    if (shouldResolve) {\n      resolve(' Promise fulfilled successfuly');\n    }\n    else {\n      reject(' Promise is rejected');\n    }\n  }, delay);\n  })\n}\n\nfunction onCreatePromiseBtnClick(e) {\n  e.preventDefault();\n  const positionValue = refs.amount.value;\n  const delayValue = refs.delay.value;\n  const stepValue = refs.step.value;\n   const promiseInterval = setInterval(() => {\n     createPromise(positionValue, delayValue).then(({ position, delay }) => {\n       position = promisesCounter;\n       if (position >= positionValue) {\n\n         clearInterval(promiseInterval);\n      }\n      delay = delayValue;\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n     })\n      .catch(({ position, delay }) => {\n        position = promisesCounter;\n        if (position >= positionValue) clearInterval(promiseInterval);\n        delay = delayValue;\n        Notiflix.Notify.warning(`Rejected promise ${position} in ${delay}ms`);\n      });\n   }, stepValue);\n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","promiseBtn","addEventListener","e","preventDefault","positionValue","value","delayValue","stepValue","promiseInterval","setInterval","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$promisesCounter","then","param","position","clearInterval","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.c55998fe.js.map"}