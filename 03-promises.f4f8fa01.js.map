{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,yBAC9BE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,yBAC/BI,WAAYL,SAASC,cAAc,WAKrC,SAASK,EAAcC,EAAUL,GAC/B,IAAMM,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUL,UAGpBW,EAAO,CAAEN,WAAUL,S,GAEpBA,E,IAZPJ,EAAKC,KAAKgB,iBAAiB,UAgB3B,SAAiCC,GAC/BA,EAAEC,iBAIF,IAHA,IAAMb,EAASc,OAAOpB,EAAKM,OAAOe,OAC9BC,EAAaF,OAAOpB,EAAKI,MAAMiB,OAC7BhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACrBE,EAAI,EAAGA,GAAKjB,EAAQiB,GAAK,EAChCf,EAAce,EAAGD,GACdE,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUL,EAAKqB,EAALrB,MACjBsB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAoCC,OAAfpB,EAAS,QAAYoB,OAANzB,EAAM,M,IAEnE0B,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUL,EAAKqB,EAALrB,MAClBsB,EAAA5B,GAAS6B,OAAOI,QAAQ,oBAAmCF,OAAfpB,EAAS,QAAYoB,OAANzB,EAAM,M,IAErEkB,GAAcjB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name = \"delay\"]'),\n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name =\"amount\"]'),\n  promiseBtn: document.querySelector('button'),\n}\n\nrefs.form.addEventListener('submit', onCreatePromiseBtnClick);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n}\n\nfunction onCreatePromiseBtnClick(e) {\n  e.preventDefault();\n  const amount = Number(refs.amount.value);\n  let delayValue = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delayValue += step;\n  }\n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","promiseBtn","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","Number","value","delayValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.f4f8fa01.js.map"}